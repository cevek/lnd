{"version":3,"file":"static/chunks/pages/universal-4e67c9e45f79466faae7.js","mappings":"g4BAOA,IAAMA,EAAKC,IAAAA,KAAgBC,KAEdC,EAA4C,SAAC,GAIpD,IAHFC,EAGE,EAHFA,QACAC,EAEE,EAFFA,QACAC,EACE,EADFA,SAEQC,EAAgBH,EAAhBG,YAER,OACI,SAACC,EAAA,EAAD,KACIH,QAASA,EACTC,SAAUA,GACNC,GAHR,IAIIE,MAAOC,EAAAA,GAAAA,MACPC,UAAWX,EAAG,Y,glBCN1B,IAAMY,EAAU,SAAC,GAAoD,IAAlDP,EAAkD,EAAlDA,QAASQ,EAAyC,EAAzCA,cAAeP,EAA0B,EAA1BA,SAC/BQ,GAAMC,EAAAA,EAAAA,KAAND,EAEFE,EACFC,EAAAA,GAAQ,OAACX,QAAD,IAACA,OAAD,EAACA,EAAUY,eAEjBC,EAAcN,EACdT,EAAAA,EAAQS,GAAeR,GAASS,EAAG,CAC/BT,QAAAA,EACAC,SAAUU,IAEd,GACAI,EAAcC,EAAAA,EAAWhB,GAASS,EAAG,CACvCT,QAAAA,EACAC,SAAUU,IAGRM,GAAiBC,EAAAA,EAAAA,GAAeJ,EAAaC,GAEnD,OACI,SAACjB,EAAD,CACIC,QAASkB,EACTjB,QAASA,EACTC,SAAUU,KAKtBJ,EAAQY,gBAAR,mCAA0B,8FAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,iBACnBD,GADmB,UAEZE,EAAAA,EAAAA,GAAe,CAAEC,OAAQH,EAAMG,OAAkBF,SAAAA,IAFrC,4GAA1B,sDAKA,S,0JCvCM1B,EAAKC,IAAAA,KAAgBC,KAEdM,EAA0C,SAAC,GAMlD,IALFG,EAKE,EALFA,UACAN,EAIE,EAJFA,QACAC,EAGE,EAHFA,SACAuB,EAEE,EAFFA,YAEE,IADFpB,MAAAA,OACE,MADMC,EAAAA,GAAAA,KACN,EACIoB,EAAYzB,IAAY0B,EAAAA,GAAAA,QAE9B,OACI,gBAAKpB,UAAWX,EAAGW,EAAW,QAA9B,UACI,SAACqB,EAAA,EAAD,CACI3B,QAASA,EACTC,SAAUA,EACVuB,YAAaA,EACbI,YAAYC,EAAAA,EAAAA,GAAe,CACvBC,KAAM,cAEVxB,UAAWX,EAAG,OAAQ,CAClBoC,WAAYN,IAEhBrB,MAAOA,Q,uBChClB4B,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,W,kBCHvBC,EAAOC,QAAU,CAAC,cAAc,oCAAoC,eAAe,qCAAqC,KAAO,6BAA6B,KAAO,6BAA6B,WAAa,mCAAmC,MAAQ,8BAA8B,YAAc,oCAAoC,eAAe,qCAAqC,cAAgB,sCAAsC,OAAS,iC,kBCA3bD,EAAOC,QAAU,CAAC,cAAc,qCAAqC,eAAe,sCAAsC,KAAO,8BAA8B,UAAY,mCAAmC,eAAe,sCAAsC,YAAc,qCAAqC,QAAU,iCAAiC,OAAS,gCAAgC,oBAAoB,2CAA2C,0BAA0B,iDAAiD,2BAA2B,kDAAkD,4BAA4B,sD","sources":["webpack://_N_E/./layouts/UniversalLayout/UniversalLayout.tsx","webpack://_N_E/./pages/universal.tsx","webpack://_N_E/../common/components/NewAppointment/NewAppointment.tsx","webpack://_N_E/?4490","webpack://_N_E/../common/components/NewAppointment/NewAppointment.module.scss","webpack://_N_E/./layouts/UniversalLayout/UniversalLayout.module.scss"],"sourcesContent":["import classNames from \"classnames/bind\";\nimport { NewAppointment } from \"common/components/NewAppointment\";\nimport { Theme } from \"common/constants/enum\";\nimport React, { FC } from \"react\";\nimport styles from \"./UniversalLayout.module.scss\";\nimport { UniversalLayoutProps } from \"./UniversalLayout.types\";\n\nconst cx = classNames.bind(styles);\n\nexport const UniversalLayout: FC<UniversalLayoutProps> = ({\n    content,\n    version,\n    language,\n}) => {\n    const { appointment } = content;\n\n    return (\n        <NewAppointment\n            version={version}\n            language={language}\n            {...appointment}\n            theme={Theme.LIGHT}\n            className={cx(\"form\")}\n        />\n    );\n};\n","import { NextPageContext } from \"next\";\nimport { mergeDeepRight } from \"ramda\";\nimport content from \"content\";\nimport loadNamespaces from \"next-translate/loadNamespaces\";\nimport useTranslation from \"next-translate/useTranslation\";\n\nimport { Language } from \"common/constants/enum\";\n\nimport {\n    UniversalLayout,\n    UniversalLayoutContentProps,\n} from \"layouts/UniversalLayout\";\nimport { dictionary } from \"layouts/BaseLayout\";\n\nimport { PageProps } from \"../page.type\";\n\nconst NewMain = ({ version, contentFolder, language }: PageProps) => {\n    const { t } = useTranslation();\n\n    const currentLanguage =\n        Language[language?.toUpperCase() as keyof typeof Language];\n\n    const pageContent = contentFolder\n        ? content[contentFolder][version](t, {\n              version,\n              language: currentLanguage,\n          })\n        : {};\n    const baseContent = dictionary[version](t, {\n        version,\n        language: currentLanguage,\n    });\n\n    const currentContent = mergeDeepRight(pageContent, baseContent);\n\n    return (\n        <UniversalLayout\n            content={currentContent as UniversalLayoutContentProps}\n            version={version}\n            language={currentLanguage}\n        />\n    );\n};\n\nNewMain.getInitialProps = async ({ query, pathname }: NextPageContext) => ({\n    ...query,\n    ...(await loadNamespaces({ locale: query.locale as string, pathname })),\n});\n\nexport default NewMain;\n","import { FC } from \"react\";\nimport classNames from \"classnames/bind\";\n\nimport { getAnalyticsId } from \"common/utils/AnalyticsId\";\nimport { CountryVersion, Theme } from \"common/constants/enum\";\nimport { BookAppointmentFullForm } from \"common/components/BookAppointmentFullForm\";\n\nimport { NewAppointmentProps } from \"./NewAppointment.types\";\nimport styles from \"./NewAppointment.module.scss\";\n\nconst cx = classNames.bind(styles);\n\nexport const NewAppointment: FC<NewAppointmentProps> = ({\n    className,\n    version,\n    language,\n    defaultCity,\n    theme = Theme.DARK,\n}) => {\n    const isGermany = version === CountryVersion.GERMANY;\n\n    return (\n        <div className={cx(className, \"root\")}>\n            <BookAppointmentFullForm\n                version={version}\n                language={language}\n                defaultCity={defaultCity}\n                analyticId={getAnalyticsId({\n                    zone: \"main-page\",\n                })}\n                className={cx(\"form\", {\n                    form_inter: isGermany,\n                })}\n                theme={theme}\n            />\n        </div>\n    );\n};\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/universal\",\n      function () {\n        return require(\"private-next-pages/universal.tsx\");\n      }\n    ]);\n  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"only-mobile\":\"NewAppointment_only-mobile__311hm\",\"only-desktop\":\"NewAppointment_only-desktop__1_E3_\",\"root\":\"NewAppointment_root__3LTb5\",\"form\":\"NewAppointment_form__2itMy\",\"form_inter\":\"NewAppointment_form_inter__16_dZ\",\"title\":\"NewAppointment_title__2ynym\",\"title_black\":\"NewAppointment_title_black__3vHiw\",\"title_ss-pro\":\"NewAppointment_title_ss-pro__2Umxj\",\"title_germany\":\"NewAppointment_title_germany__dLY6C\",\"header\":\"NewAppointment_header__3755K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"only-mobile\":\"UniversalLayout_only-mobile__1DIfc\",\"only-desktop\":\"UniversalLayout_only-desktop__1dv2r\",\"head\":\"UniversalLayout_head__2QFtL\",\"container\":\"UniversalLayout_container__SPxs7\",\"how-it-works\":\"UniversalLayout_how-it-works__1v10X\",\"appointment\":\"UniversalLayout_appointment__1rhvI\",\"doctors\":\"UniversalLayout_doctors__1NfWQ\",\"prices\":\"UniversalLayout_prices__xs1xp\",\"appointment-title\":\"UniversalLayout_appointment-title__33_lV\",\"appointment-title_black\":\"UniversalLayout_appointment-title_black__3OeCA\",\"appointment-title_ss-pro\":\"UniversalLayout_appointment-title_ss-pro__2kL9n\",\"appointment-title_germany\":\"UniversalLayout_appointment-title_germany__3v36_\"};"],"names":["cx","classNames","styles","UniversalLayout","content","version","language","appointment","NewAppointment","theme","Theme","className","NewMain","contentFolder","t","useTranslation","currentLanguage","Language","toUpperCase","pageContent","baseContent","dictionary","currentContent","mergeDeepRight","getInitialProps","query","pathname","loadNamespaces","locale","defaultCity","isGermany","CountryVersion","BookAppointmentFullForm","analyticId","getAnalyticsId","zone","form_inter","window","__NEXT_P","push","module","exports"],"sourceRoot":""}