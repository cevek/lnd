{"version":3,"file":"static/chunks/pages/universalKid-d2909b0b2fb9c5bb25b5.js","mappings":"ozBAgBA,IAAMA,EAAe,SAAC,GAML,IALbC,EAKa,EALbA,QACAC,EAIa,EAJbA,cACAC,EAGa,EAHbA,SACAC,EAEa,EAFbA,MACAC,EACa,EADbA,YAEQC,GAAMC,EAAAA,EAAAA,KAAND,EAEFE,EACFC,EAAAA,GAAQ,OAACN,QAAD,IAACA,OAAD,EAACA,EAAUO,eAEjBC,EAAcT,EACdU,EAAAA,EAAQV,GAAeD,GAASK,EAAG,CAC/BL,QAAAA,EACAE,SAAUK,IAEd,GACAK,EAAcC,EAAAA,EAAWb,GAASK,EAAG,CACvCL,QAAAA,EACAE,SAAUK,IAGRO,GAAiBC,EAAAA,EAAAA,GAAeL,EAAaE,GAEnD,OACI,SAAC,IAAD,CACIT,MAAOA,EACPC,YAAaA,EACbO,QAASC,EAHb,UAKI,SAAC,IAAD,CACID,QAASG,EACTd,QAASA,EACTE,SAAUK,OAM1BR,EAAaiB,gBAAb,mCAA+B,8FAC3BC,EAD2B,EAC3BA,MACAC,EAF2B,EAE3BA,SAF2B,iBAIxBD,GAJwB,UAKjBE,EAAAA,EAAAA,GAAe,CAAEC,OAAQH,EAAMG,OAAkBF,SAAAA,IALhC,4GAA/B,sDAQA,a,uBC/DKG,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,gBACA,WACE,OAAO,EAAQ,Y","sources":["webpack://_N_E/./pages/universalKid.tsx","webpack://_N_E/?da2e"],"sourcesContent":["import { NextPageContext } from \"next\";\nimport { mergeDeepRight } from \"ramda\";\nimport content from \"content\";\nimport useTranslation from \"next-translate/useTranslation\";\nimport loadNamespaces from \"next-translate/loadNamespaces\";\n\nimport { Language } from \"common/constants/enum\";\n\nimport {\n    UniversalKidLayout,\n    UniversalKidLayoutContentProps,\n} from \"layouts/UniversalKidLayout\";\nimport { BaseLayout, dictionary } from \"layouts/BaseLayout\";\n\nimport { PageProps } from \"../page.type\";\n\nconst UniversalKid = ({\n    version,\n    contentFolder,\n    language,\n    title,\n    description,\n}: PageProps) => {\n    const { t } = useTranslation();\n\n    const currentLanguage =\n        Language[language?.toUpperCase() as keyof typeof Language];\n\n    const pageContent = contentFolder\n        ? content[contentFolder][version](t, {\n              version,\n              language: currentLanguage,\n          })\n        : {};\n    const baseContent = dictionary[version](t, {\n        version,\n        language: currentLanguage,\n    });\n\n    const currentContent = mergeDeepRight(pageContent, baseContent);\n\n    return (\n        <BaseLayout\n            title={title}\n            description={description}\n            content={baseContent}\n        >\n            <UniversalKidLayout\n                content={currentContent as UniversalKidLayoutContentProps}\n                version={version}\n                language={currentLanguage}\n            />\n        </BaseLayout>\n    );\n};\n\nUniversalKid.getInitialProps = async ({\n    query,\n    pathname,\n}: NextPageContext) => ({\n    ...query,\n    ...(await loadNamespaces({ locale: query.locale as string, pathname })),\n});\n\nexport default UniversalKid;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/universalKid\",\n      function () {\n        return require(\"private-next-pages/universalKid.tsx\");\n      }\n    ]);\n  "],"names":["UniversalKid","version","contentFolder","language","title","description","t","useTranslation","currentLanguage","Language","toUpperCase","pageContent","content","baseContent","dictionary","currentContent","mergeDeepRight","getInitialProps","query","pathname","loadNamespaces","locale","window","__NEXT_P","push"],"sourceRoot":""}