{"version":3,"sources":["webpack://_N_E/../styles/mixins.module.scss","webpack://_N_E/MaxWidthContainer.module.scss","webpack://_N_E/../common/styles/mixins.module.scss","webpack://_N_E/UniversalTeenLayout.module.scss"],"names":[],"mappings":"AAiCY,yBA+DZ,sCAEQ,sBAAA,CAAA,CAjEI,yBAqEZ,uCAEQ,sBAAA,CAAA,CAvEI,yBC/BZ,+BAEQ,gBAAA,CACA,aAAA,CAAA,CC4BI,yBA+DZ,wCAEQ,sBAAA,CAAA,CAjEI,yBAqEZ,yCAEQ,sBAAA,CAAA,CCtGR,iCACI,oBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,6BAAA,CAAA,yBAAA,CAAA,qBAAA,CAWJ,yEAHI,UAKA,CAFJ,mCAEI,cAAA,CDgBQ,yBClBZ,mCAKQ,cAAA,CAAA,CDaI,yBClBZ,mCASQ,gBAAA,CAIA,gBAAA,CAEA,SAAA,CAAA,CDGI,yBClBZ,mCAmBQ,gBAAA,CACA,cAAA,CAAA,CAIR,iCACI,mBAAA,CDPQ,yBCMZ,iCAIQ,oBAAA,CAAA,CAIR,6GAGI,mBAAA,CDjBQ,yBCcZ,6GAMQ,oBAAA,CAAA,CAUR,yCACI,mBAAA,CD/BQ,yBC8BZ,yCAIQ,oBAAA,CAAA,CDlCI,yBCsCZ,mCAEQ,kBAAA,CAAA,CAIR,uCACI,kBAAA,CD7CQ,yBC4CZ,uCAIQ,mBAAA,CAAA,CAIR,sCACI,kBAAA,CDrDQ,yBCoDZ,sCAIQ,mBAAA,CAAA,CAIR,8CDpBI,gBAAA,CACA,iBAAA,CACA,iBAAA,CACA,kBAAA,CACA,eAAA,CA5CQ,yBC4DZ,8CDbQ,kBAAA,CAAA,CAGJ,oDAdA,aAAA,CAkBA,qDACI,oCAAA,CAGJ,sDAtBA,aAAA","file":"static/css/55d457271c2f5f68c25f.css","sourcesContent":["@import \"./tokens\";\n\n$breakpoints: (\n    \"mobile\": (\n        // max-width: 767px,\n        max-width: 1023px,\n    ),\n    \"mobile-L\": (\n        min-width: 375px,\n    ),\n    \"tablet\": (\n        min-width: 768px,\n    ),\n    \"laptop\": (\n        min-width: 1024px,\n    ),\n    \"container-default\": (\n        min-width: 1288px,\n    ),\n    \"desktop\": (\n        min-width: 1366px,\n    ),\n    \"laptop-L\": (\n        min-width: 1440px,\n    ),\n    \"laptop-XL\": (\n        min-width: 1600px,\n    ),\n) !default;\n\n@mixin respond-to($breakpointList) {\n    @each $breakpoint in $breakpointList {\n        @if map-has-key($breakpoints, $breakpoint) {\n            @media #{inspect(map-get($breakpoints, $breakpoint))} {\n                @content;\n            }\n        } @else {\n            @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Available breakpoints are: #{map-keys($breakpoints)}.';\n        }\n    }\n}\n\n@mixin normalizedList {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    list-style: none;\n}\n\n@mixin normalizedButton {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-weight: inherit;\n}\n\n@function get_color($palette, $color: \"0\") {\n    $colorTokens: map_get($tokens, \"color\");\n    $selected: map_get($colorTokens, $palette);\n\n    @if $selected {\n        @return map_get($selected, $color);\n    } @else {\n        @error \"Key #{$palette} doesn't match tokens signature\";\n    }\n}\n\n@mixin color($palette, $color: \"0\") {\n    color: get_color($palette, $color);\n}\n\n@mixin formTitle() {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    margin-bottom: 24px;\n    max-width: 792px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 40px;\n    }\n\n    &_black {\n        @include color(\"gray\", \"-5\");\n    }\n\n    &_ss-pro {\n        font-family: \"Source Serif Pro\", serif;\n    }\n\n    &_germany {\n        @include color(\"gray\", \"-7\");\n    }\n}\n\n.only-mobile {\n    @include respond-to(\"laptop\") {\n        display: none !important;\n    }\n}\n\n.only-desktop {\n    @include respond-to(\"mobile\") {\n        display: none !important;\n    }\n}\n","@import \"style/mixins.module.scss\";\n\n.root {\n    @include respond-to(\"laptop-XL\") {\n        max-width: 1600px;\n        margin: 0 auto;\n    }\n}\n","@import \"./tokens\";\n\n$breakpoints: (\n    \"mobile\": (\n        // max-width: 767px,\n        max-width: 1023px,\n    ),\n    \"mobile-L\": (\n        min-width: 375px,\n    ),\n    \"tablet\": (\n        min-width: 768px,\n    ),\n    \"laptop\": (\n        min-width: 1024px,\n    ),\n    \"container-default\": (\n        min-width: 1288px,\n    ),\n    \"desktop\": (\n        min-width: 1366px,\n    ),\n    \"laptop-L\": (\n        min-width: 1440px,\n    ),\n    \"laptop-XL\": (\n        min-width: 1600px,\n    ),\n) !default;\n\n@mixin respond-to($breakpointList) {\n    @each $breakpoint in $breakpointList {\n        @if map-has-key($breakpoints, $breakpoint) {\n            @media #{inspect(map-get($breakpoints, $breakpoint))} {\n                @content;\n            }\n        } @else {\n            @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Available breakpoints are: #{map-keys($breakpoints)}.';\n        }\n    }\n}\n\n@mixin normalizedList {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    list-style: none;\n}\n\n@mixin normalizedButton {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-weight: inherit;\n}\n\n@function get_color($palette, $color: \"0\") {\n    $colorTokens: map_get($tokens, \"color\");\n    $selected: map_get($colorTokens, $palette);\n\n    @if $selected {\n        @return map_get($selected, $color);\n    } @else {\n        @error \"Key #{$palette} doesn't match tokens signature\";\n    }\n}\n\n@mixin color($palette, $color: \"0\") {\n    color: get_color($palette, $color);\n}\n\n@mixin formTitle() {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    margin-bottom: 24px;\n    max-width: 792px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 40px;\n    }\n\n    &_black {\n        @include color(\"gray\", \"-5\");\n    }\n\n    &_ss-pro {\n        font-family: \"Source Serif Pro\", serif;\n    }\n\n    &_germany {\n        @include color(\"gray\", \"-7\");\n    }\n}\n\n.only-mobile {\n    @include respond-to(\"laptop\") {\n        display: none !important;\n    }\n}\n\n.only-desktop {\n    @include respond-to(\"mobile\") {\n        display: none !important;\n    }\n}\n","@import \"style/mixins.module.scss\";\n\n.root {\n    display: flex;\n    flex-direction: column;\n}\n\n.container {\n    width: 100%;\n}\n\n.container {\n    width: 100%;\n}\n\n.header {\n    width: 100%;\n    padding: 0 24px;\n\n    @include respond-to(\"laptop\") {\n        padding: 0 40px;\n    }\n\n    @include respond-to(\"laptop-L\") {\n        max-width: 1200px;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 10px;\n        margin-bottom: 10px;\n\n        padding: 0;\n    }\n\n    @include respond-to(\"laptop-XL\") {\n        max-width: 1600px;\n        padding: 0 40px;\n    }\n}\n\n.main {\n    padding-bottom: 64px;\n\n    @include respond-to(\"laptop\") {\n        padding-bottom: 120px;\n    }\n}\n\n.steps,\n.prices,\n.appointment {\n    padding-bottom: 64px;\n\n    @include respond-to(\"laptop\") {\n        padding-bottom: 120px;\n    }\n}\n\n.prices {\n    @include respond-to(\"mobile\") {\n        margin-bottom: 40px;\n    }\n}\n\n.clinic-visit {\n    padding-bottom: 64px;\n\n    @include respond-to(\"laptop\") {\n        padding-bottom: 120px;\n    }\n}\n\n.prices {\n    @include respond-to(\"mobile\") {\n        margin-bottom: 40px;\n    }\n}\n\n.advantages {\n    margin-bottom: 40px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 120px;\n    }\n}\n\n.questions {\n    margin-bottom: 80px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 224px;\n    }\n}\n\n.appointment-title {\n    @include formTitle();\n}\n"],"sourceRoot":""}