{"version":3,"sources":["webpack://_N_E/../styles/mixins.module.scss","webpack://_N_E/NewAppointment.module.scss","webpack://_N_E/../common/styles/mixins.module.scss","webpack://_N_E/UniversalLayout.module.scss"],"names":[],"mappings":"AAiCY,yBA+DZ,mCAEQ,sBAAA,CAAA,CAjEI,yBAqEZ,oCAEQ,sBAAA,CAAA,CCtGR,4BACI,iBAAA,CACA,eAAA,CACA,eAAA,CACA,gBAAA,CACA,iBAAA,CAEA,eAAA,CAGJ,4BACI,UAAA,CACA,gBAAA,CAEA,aAAA,CAEA,kCACI,4BAAA,CACA,eAAA,CAIR,6BACI,kBAAA,CACA,eAAA,CAEA,mCDyCA,aAAA,CCrCA,oCACI,oCAAA,CAGJ,qCDiCA,aAAA,CC5BJ,8BACI,mBAAA,CCTQ,yBA+DZ,oCAEQ,sBAAA,CAAA,CAjEI,yBAqEZ,qCAEQ,sBAAA,CCtGR,6BAEQ,mBAAA,CDoGA,CChGR,uEAEI,mBAAA,CDuBQ,yBCzBZ,uEAKQ,mBAAA,CAAA,CDoBI,yBChBZ,qCAEQ,iBAAA,CACA,kBAAA,CAAA,CDaI,yBChBZ,qCAOQ,YAAA,CACA,gBAAA,CACA,iBAAA,CAAA,CAIR,oCACI,mBAAA,CDEQ,yBCHZ,oCAIQ,mBAAA,CAAA,CDDI,yBCHZ,oCAQQ,mBAAA,CAAA,CAIR,gCACI,kBAAA,CDVQ,yBCSZ,gCAIQ,kBAAA,CAAA,CDbI,yBCSZ,gCAQQ,mBAAA,CAAA,CAIR,+BACI,mBAAA,CDtBQ,yBCqBZ,+BAIQ,mBAAA,CAAA,CAIR,0CDWI,gBAAA,CACA,iBAAA,CACA,iBAAA,CACA,kBAAA,CACA,eAAA,CA5CQ,yBC6BZ,0CDkBQ,kBAAA,CAAA,CAGJ,gDAdA,aAAA,CAkBA,iDACI,oCAAA,CAGJ,kDAtBA,aAAA","file":"static/css/c72dfe5b21d93ddc6ce0.css","sourcesContent":["@import \"./tokens\";\n\n$breakpoints: (\n    \"mobile\": (\n        // max-width: 767px,\n        max-width: 1023px,\n    ),\n    \"mobile-L\": (\n        min-width: 375px,\n    ),\n    \"tablet\": (\n        min-width: 768px,\n    ),\n    \"laptop\": (\n        min-width: 1024px,\n    ),\n    \"container-default\": (\n        min-width: 1288px,\n    ),\n    \"desktop\": (\n        min-width: 1366px,\n    ),\n    \"laptop-L\": (\n        min-width: 1440px,\n    ),\n    \"laptop-XL\": (\n        min-width: 1600px,\n    ),\n) !default;\n\n@mixin respond-to($breakpointList) {\n    @each $breakpoint in $breakpointList {\n        @if map-has-key($breakpoints, $breakpoint) {\n            @media #{inspect(map-get($breakpoints, $breakpoint))} {\n                @content;\n            }\n        } @else {\n            @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Available breakpoints are: #{map-keys($breakpoints)}.';\n        }\n    }\n}\n\n@mixin normalizedList {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    list-style: none;\n}\n\n@mixin normalizedButton {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-weight: inherit;\n}\n\n@function get_color($palette, $color: \"0\") {\n    $colorTokens: map_get($tokens, \"color\");\n    $selected: map_get($colorTokens, $palette);\n\n    @if $selected {\n        @return map_get($selected, $color);\n    } @else {\n        @error \"Key #{$palette} doesn't match tokens signature\";\n    }\n}\n\n@mixin color($palette, $color: \"0\") {\n    color: get_color($palette, $color);\n}\n\n@mixin formTitle() {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    margin-bottom: 24px;\n    max-width: 792px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 40px;\n    }\n\n    &_black {\n        @include color(\"gray\", \"-5\");\n    }\n\n    &_ss-pro {\n        font-family: \"Source Serif Pro\", serif;\n    }\n\n    &_germany {\n        @include color(\"gray\", \"-7\");\n    }\n}\n\n.only-mobile {\n    @include respond-to(\"laptop\") {\n        display: none !important;\n    }\n}\n\n.only-desktop {\n    @include respond-to(\"mobile\") {\n        display: none !important;\n    }\n}\n","@import \"style/mixins.module.scss\";\n\n.root {\n    position: relative;\n    max-width: 375px;\n    min-height: 50vh;\n    margin-left: auto;\n    margin-right: auto;\n\n    text-align: left;\n}\n\n.form {\n    width: 100%;\n    min-height: 588px;\n\n    margin: 0 auto;\n\n    &_inter {\n        font-family: Inter, sans-serif;\n        font-weight: 400;\n    }\n}\n\n.title {\n    margin-bottom: 16px;\n    text-align: left;\n\n    &_black {\n        @include color(\"gray\", \"-5\");\n    }\n\n    &_ss-pro {\n        font-family: \"Source Serif Pro\", serif;\n    }\n\n    &_germany {\n        @include color(\"gray\", \"-7\");\n    }\n}\n\n.header {\n    padding-bottom: 24px;\n}\n","@import \"./tokens\";\n\n$breakpoints: (\n    \"mobile\": (\n        // max-width: 767px,\n        max-width: 1023px,\n    ),\n    \"mobile-L\": (\n        min-width: 375px,\n    ),\n    \"tablet\": (\n        min-width: 768px,\n    ),\n    \"laptop\": (\n        min-width: 1024px,\n    ),\n    \"container-default\": (\n        min-width: 1288px,\n    ),\n    \"desktop\": (\n        min-width: 1366px,\n    ),\n    \"laptop-L\": (\n        min-width: 1440px,\n    ),\n    \"laptop-XL\": (\n        min-width: 1600px,\n    ),\n) !default;\n\n@mixin respond-to($breakpointList) {\n    @each $breakpoint in $breakpointList {\n        @if map-has-key($breakpoints, $breakpoint) {\n            @media #{inspect(map-get($breakpoints, $breakpoint))} {\n                @content;\n            }\n        } @else {\n            @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '\n        + 'Available breakpoints are: #{map-keys($breakpoints)}.';\n        }\n    }\n}\n\n@mixin normalizedList {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    list-style: none;\n}\n\n@mixin normalizedButton {\n    background-color: transparent;\n    border: none;\n    box-shadow: none;\n    font-weight: inherit;\n}\n\n@function get_color($palette, $color: \"0\") {\n    $colorTokens: map_get($tokens, \"color\");\n    $selected: map_get($colorTokens, $palette);\n\n    @if $selected {\n        @return map_get($selected, $color);\n    } @else {\n        @error \"Key #{$palette} doesn't match tokens signature\";\n    }\n}\n\n@mixin color($palette, $color: \"0\") {\n    color: get_color($palette, $color);\n}\n\n@mixin formTitle() {\n    margin-left: auto;\n    margin-right: auto;\n    text-align: center;\n    margin-bottom: 24px;\n    max-width: 792px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 40px;\n    }\n\n    &_black {\n        @include color(\"gray\", \"-5\");\n    }\n\n    &_ss-pro {\n        font-family: \"Source Serif Pro\", serif;\n    }\n\n    &_germany {\n        @include color(\"gray\", \"-7\");\n    }\n}\n\n.only-mobile {\n    @include respond-to(\"laptop\") {\n        display: none !important;\n    }\n}\n\n.only-desktop {\n    @include respond-to(\"mobile\") {\n        display: none !important;\n    }\n}\n","@import \"style/mixins.module.scss\";\n\n.head {\n    @include respond-to(\"mobile\") {\n        margin-bottom: 120px;\n    }\n}\n\n.container,\n.how-it-works {\n    margin-bottom: 120px;\n\n    @include respond-to(\"desktop\") {\n        margin-bottom: 240px;\n    }\n}\n\n.how-it-works {\n    @include respond-to(\"laptop\") {\n        padding-left: 40px;\n        padding-right: 40px;\n    }\n\n    @include respond-to(\"container-default\") {\n        width: 1288px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n}\n\n.appointment {\n    margin-bottom: 120px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 144px;\n    }\n\n    @include respond-to(\"desktop\") {\n        margin-bottom: 200px;\n    }\n}\n\n.doctors {\n    margin-bottom: 64px;\n\n    @include respond-to(\"laptop\") {\n        margin-bottom: 72px;\n    }\n\n    @include respond-to(\"desktop\") {\n        margin-bottom: 140px;\n    }\n}\n\n.prices {\n    margin-bottom: 120px;\n\n    @include respond-to(\"desktop\") {\n        margin-bottom: 240px;\n    }\n}\n\n.appointment-title {\n    @include formTitle();\n}"],"sourceRoot":""}